HW

Review yesterday's homework! Answer questions better.

HW 2

Create an app that has an IntentService that downloads a file.  Use a ResultReceiver (which is used within IntentService).

HW 3

Create a service that plays an mp3 file. Use the MediaPlayer class.
done

HW 4

Start Material Design Course in Udacity. Finish first 3 modules (Fundementals, Surfaces, Bold graphic Design).
Do one module per day.
done

HW 5

Watch videos Luis gave us and write a summary for each... Also listen to the podcast Luis sent and write a summary (Listen to one a day).

Video1: What's new in Android? '17
In the introduction they cover the new developer features available to provide better UI (new image and color formats that are accepted, and a new way to overlay videos being played on the user's homescreen). They cover new features in the MediaPlayer class. They provided features for the Animator that gives more control over the animations playing to the developer (like seeking through an animation or reversing it). Also they added functionality to Animators that allow developers to control animations by velocity, allowing for more responsive and aestheticly pleasing animations. They added a new font resource directory to make it easier to control and change font styles. THIS IS AWESOME they no longer require casting for the view.findViewById method. New feature allow user to block specific notifications from different apps to keep the notification drawer from crowding up.

Video2: Speeding up your Android Gradle Builds.
The Google team basically found a bunch of developers with complaints and difficulties over their slow build times and found a bunch of solutions to avoid common problems that delay build times and ways to fix them.  They added several new features that help reduce the size of compiled apk's for development scenarios (for example, while developing, you likely only need to test the app in english, so you can set the gradle to have  a build flavor that excludes foreign files while the app is in development). There are also tools now that allow developers to crunch png files into smaller file sizes, allowing for smaller apks, and making it useful for release builds (takes up less device storage on the users phone). They also optimized parts of the Android Studio IDE such as the "apply changes" button, which pushes changes directly into the live build on your developing machine rather than close and restart the build every time a new feature is made. He then starts talking about how they made gradle build applications modularly, which allows the app to simply build the app out of several parts, and future builds can reuse the previous modules that did not get changed that time around.  There are also gradle tools that can be used to help find out why a build is taking so long: --dry-run (which should only take a couple of seconds no matter how big the project is, so if that takes a long time something is wrong), then --info which displays what tasks gradle is currently working on building, so your time consuming tasks can be sniffed out, and --profile which builds out an html page containing information of each task's execution timing.

Podcast:
EP 082: Airbnb’s Gabriel tells us how to animate with Lottie
In this episode they spoke with the developer of the Lottie animation library, Gabriel, who currently works for Airbnb. It is a library that allows developers to take animations rendered in Adobe After-Effects and use them natively in an Android and iOS applications.  The library is named after Lotte Reiniger, a German woman and is known as the pioneer of silhouette animation. It exports and translates animations using JSON files that make the exported animations cross compatible to several different platforms. The library allows for static animations to be put directly into an xml layout, and it allows you to dynamically control animations in code. These JSON animation assets can also be stored online, which allows an app to have access to hundreds of animations without storing them locally on the app (which saves a lot of memory). The library is still in development and is not able to support specific types of animations, such as expressions (an AfterEffects feature allowing you to write javascript to control your animations), and text animations (which they seem to be trying to develop currently).