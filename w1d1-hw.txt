OOP
Encapsulation
protects data.  use getters and setters to access and modify private variables

Polymorphism
a result of inheritance.  Allows a class to be referred to as itself or as an instance of its parent classes.

Inheritance
Any class extending a parent class will inherit all methods and variables from its parent class.  Used with the key word "extends"

Interfaces
used with the key word "implements".  a subclass can implement as many interfaces as it wants.
interfaces are used when any implementation of said interface will behave differently in every case.

Abstract Classes
used with the key word "extends".  a subclass can only extend from one abstract class at a time.
used in a case where all implementations share some common logic universally, but still needs other parts of logic to be defined by its subclass



Java

Java Collection Framework & Arrays
Three Generic types of collections
Ordered Lists: stores items of the same class in a specific order. Format(int index, Obj value)
Dictionaries/ Maps: stores items in no particular order using key value pairs. Format (Obj key, Obj value)
Sets: unordered collections where similar objects are not allowed

Generics
allows the ability to handle several types of collections (collections of strings, ints, doubles, etc...) using one single method or class
code sample of generic class from internet:
public class Box<T> {
   private T t;

   public void add(T t) {
      this.t = t;
   }

   public T get() {
      return t;
   }

   public static void main(String[] args) {
      Box<Integer> integerBox = new Box<Integer>();
      Box<String> stringBox = new Box<String>();
    
      integerBox.add(new Integer(10));
      stringBox.add(new String("Hello World"));

      System.out.printf("Integer Value :%d\n\n", integerBox.get());
      System.out.printf("String Value :%s\n", stringBox.get());
   }
}


Design Patterns
MVC
Model View Controller
Model: holds all data and logic to the application
View: handles all ui output when any changes to the model are made
Controller: the middle man that mediates input and updates the model and view accordingly

MVP
Model View Presenter
Model: holds all data and logic
View: displays data as well as handling user input
Presenter: retrieves data from the model and formats it to be ready to display
  
M V VM
Model View ViewModel
Model: holds data and logic
View: structure and layout of UI (also handles user input)
ViewModel: described on wikipedia as the state of the data in the model.
Relies on a data binder to properly update view when model is changed and vice-versa

AAPT - Android Asset Packaging Tool
The tool in the Android SDK that takes the entire project structure (source code, resources, etc...) and packages
them into .zip like files (in Androids case an APK)